*  AUTHOR           : AHMED ALAA     a.alaa@masaref-bdc.com
*  DATE             : 4 - AUG- 19
*  CLIENT           : BDC
*  MODULE			: CUSTOMER
*  DESCRIPTION      : ROUTINE TO CHECK IF THE ACCOUNT NOT INTERNAL
*  ATTACHED TO		: CUSTOMER,MBSC.CORP.INPUT
*-----------------------------------------------------------------------------
    SUBROUTINE V.MBSC.VAL.CORP.SIZE
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
	$INSERT I_F.CUSTOMER
    $INSERT I_F.MBSC.SME.CAT.PARAM
	$INSERT I_F.MBSC.CUS.ACTIVITYTYPE
*-----------------------------------------------------------------------------
CORP.SIZE.ID = ''
START.DATE  = ''
T.DATE = TODAY
SME.TYPE = ''
INDUST.TYPE = ''
ACTIV.TYPE = '0'
TURN.OVER = '0'
P.CAPITAL = '0'


CALL GET.LOC.REF("CUSTOMER","L.BUS.STAR.DATE",STARTDATE.POS)
START.DATE = R.NEW(EB.CUS.LOCAL.REF)<1,STARTDATE.POS>



CALL GET.LOC.REF("CUSTOMER","L.SIZEOFSALES",TURN.POS)
TURN.OVER = R.NEW(EB.CUS.LOCAL.REF)<1,TURN.POS>

CALL GET.LOC.REF("CUSTOMER","ACTIVITYTYPE",ACTTYPE.POS)
ACTIV.TYPE = R.NEW(EB.CUS.LOCAL.REF)<1,ACTTYPE.POS>



CALL GET.LOC.REF("CUSTOMER","PAIDCAPITAL",CAP.POS)
P.CAPITAL = R.NEW(EB.CUS.LOCAL.REF)<1,CAP.POS>

FN.MBSC.SME.CAT.PARAM = 'F.MBSC.SME.CAT.PARAM'
F.MBSC.SME.CAT.PARAM = ''
CALL OPF(FN.MBSC.SME.CAT.PARAM,F.MBSC.SME.CAT.PARAM)



FN.MBSC.CUS.ACTIVITYTYPE = 'F.MBSC.CUS.ACTIVITYTYPE'
F.MBSC.CUS.ACTIVITYTYPE = ''
CALL OPF(FN.MBSC.CUS.ACTIVITYTYPE,F.MBSC.CUS.ACTIVITYTYPE)

* READ FROM ACTIVITY TYPE LIST TO GET INDUSTRIAL TYPE 
CALL F.READ(FN.MBSC.CUS.ACTIVITYTYPE,ACTIV.TYPE,R.ACTIVITY,F.MBSC.CUS.ACTIVITYTYPE,ERR.ACTIVITYTYPE)
INDUST.TYPE = R.ACTIVITY<ACTIVITY.TYPE.ACT.TYPE>


 *START.DATE = R.NEW(EB.CUS.LOCAL.REF)<1,DATE.POS>
IF START.DATE NE '' THEN
	
	FREQ = 'M12'
    D.DDY = '01'
	
	OLD.COMI = COMI

	COMI = START.DATE:FREQ:D.DDY
	CALL CFQ
	NEXT.YEAR = COMI[1,8]
	COMI = OLD.COMI
END
	IF NEXT.YEAR GE T.DATE THEN 
	SME.TYPE.1 = 'NEW' 
	END
	IF NEXT.YEAR LT T.DATE THEN 
	SME.TYPE.1 = 'OLD'
	END
		
  BEGIN CASE
    CASE SME.TYPE.1 EQ 'OLD'
        T.SEL = ''  ;  KEY.LIST = ''  ; SELECTED = ''
		T.SEL = "SELECT ":F.MBSC.SME.CAT.PARAM:" WITH SME.TYPE EQ ":SME.TYPE.1:" AND MIN.TURN.OVER LE ":TURN.OVER: " AND MAX.TURN.OVER GT ":TURN.OVER
		CALL EB.READLIST(T.SEL,KEY.LIST,"",SELECTED,SEL.ERR)
 
		CORP.SIZE.ID = KEY.LIST<1> 
		
		IF CORP.SIZE.ID EQ '' THEN 
		T.SEL = ''  ;  KEY.LIST = ''  ; SELECTED = ''
		T.SEL = "SELECT ":F.MBSC.SME.CAT.PARAM:" WITH SME.TYPE EQ ":SME.TYPE.1:" AND MIN.TURN.OVER LE ":TURN.OVER: " AND MAX.TURN.OVER EQ 0"
		CALL EB.READLIST(T.SEL,KEY.LIST,"",SELECTED,SEL.ERR)
		CORP.SIZE.ID = KEY.LIST<1> 
		END 
 
*=============================================================
CALL GET.LOC.REF('CUSTOMER','CORP.SIZE',SIZE.POS)
R.NEW(EB.CUS.LOCAL.REF)<1,SIZE.POS> = CORP.SIZE.ID
*==============================================================
     		
  	CASE SME.TYPE.1 EQ 'NEW'
				 
			
        T.SEL = ''  ;  KEY.LIST = ''  ; SELECTED = ''
		T.SEL = 'SELECT F.MBSC.SME.CAT.PARAM WITH SME.TYPE EQ NEW AND ACT.TYPE EQ ':INDUST.TYPE:' AND MIN.PAID.CAPTIAL LE ':P.CAPITAL:' AND MAX.PAID.CAPTIAL GT ':P.CAPITAL
		CALL EB.READLIST(T.SEL,KEY.LIST,"",SELECTED,SEL.ERR)

		CORP.SIZE.ID = KEY.LIST<1> 


IF CORP.SIZE.ID EQ '' THEN
 T.SEL = ''  ;  KEY.LIST = ''  ; SELECTED = ''
		T.SEL = 'SELECT F.MBSC.SME.CAT.PARAM WITH SME.TYPE EQ NEW AND ACT.TYPE EQ ':INDUST.TYPE:' AND MIN.PAID.CAPTIAL LE ':P.CAPITAL:' AND MAX.PAID.CAPTIAL EQ 0'
		CALL EB.READLIST(T.SEL,KEY.LIST,"",SELECTED,SEL.ERR)
		CORP.SIZE.ID = KEY.LIST<1> 
END
*=============================================================
CALL GET.LOC.REF('CUSTOMER','CORP.SIZE',SIZE.POS)
R.NEW(EB.CUS.LOCAL.REF)<1,SIZE.POS> = CORP.SIZE.ID
*==============================================================
		CASE SME.TYPE.1 EQ ''
			CALL GET.LOC.REF('CUSTOMER','CORP.SIZE',SIZE.POS)
			R.NEW(EB.CUS.LOCAL.REF)<1,SIZE.POS> = ''
  	    		
  	END CASE
	
	END	
RETURN
*-----------------------------------------------------------------------------
END
