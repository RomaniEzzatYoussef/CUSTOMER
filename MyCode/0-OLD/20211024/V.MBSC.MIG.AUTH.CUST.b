*------------------------------------------------------------------------------------------------------------------
* <Rating>-22</Rating>
*------------------------------------------------------------------------------------------------------------------
*  AUTHOR           : ROMANI EZZAT r.ezzat@masaref-bsc.com
*  DATE             : 25 OCT 2021
*  CLIENT           : BDC
*  MODULE			: CUSTOMER
*  DESCRIPTION      : Routine to migrate the guarantor & commercial register & minor templates when auth customer
*  ATTACHED TO		: CUSTOMER,MBSC.DMD
*------------------------------------------------------------------------------------------------------------------
    SUBROUTINE  V.MBSC.MIG.AUTH.CUST
*------------------------------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
	$INSERT I_F.CUSTOMER
	$INSERT I_F.MBSC.GUARANTOR.PARAM
	$INSERT I_F.MBSC.CUST.DUPLICATE
	$INSERT I_F.MBSC.MINOR.DATA
*------------------------------------------------------------------------------------------------------------------
	*DEBUG
*------------------------------------------------------------------------------------------------------------------

	FN.CUSTOMER = 'F.CUSTOMER'
	F.CUSTOMER =''
	CALL OPF(FN.CUSTOMER,F.CUSTOMER)
	
	FN.MBSC.GUARANTOR.PARAM = 'F.MBSC.GUARANTOR.PARAM'
	F.MBSC.GUARANTOR.PARAM  = ''
	CALL OPF(FN.MBSC.GUARANTOR.PARAM, F.MBSC.GUARANTOR.PARAM)

	FN.MBSC.CUST.DUPLICATE = 'F.MBSC.CUST.DUPLICATE'
	F.MBSC.CUST.DUPLICATE =''
	CALL OPF(FN.MBSC.CUST.DUPLICATE,F.MBSC.CUST.DUPLICATE)
	
	FN.MBSC.MINOR.DATA = 'F.MBSC.MINOR.DATA'
	F.MBSC.MINOR.DATA  = ''
	CALL OPF(FN.MBSC.MINOR.DATA, F.MBSC.MINOR.DATA)
	
*------------------------------------------------------------------------------------------------------------------
	GUARANTOR.ID = ''
	CALL GET.LOC.REF(APPLICATION,"GUARANTOR",GUARANTOR.POS)
	GUARANTOR.ID = R.NEW(EB.CUS.LOCAL.REF)<1,GUARANTOR.POS>
	
	GUARANT.PERCE = ''
	CALL GET.LOC.REF(APPLICATION,"GUARANT.PERCE",GUARANT.PERCE.POS)
	GUARANT.PERCE = R.NEW(EB.CUS.LOCAL.REF)<1,GUARANT.PERCE.POS>
	
	GUARANT.AMOUN = ''
	CALL GET.LOC.REF(APPLICATION,"GUARANT.AMOUN",GUARANT.AMOUN.POS)
	GUARANT.AMOUN = R.NEW(EB.CUS.LOCAL.REF)<1,GUARANT.AMOUN.POS>
	
	GUARANTOR.LEN = DCOUNT(GUARANTOR.ID,SM)
	
	I=1
	LOOP
		GUAR.CUSTOMER       = ''
		DATE.OF.GUARANTEE   = ''
		PERC.OF.GUARANTEE   = ''
		AMT.OF.GUARANTEE    = ''
		GUAR.COMPANY        = ''
		LOAN.ID             = ''
		
		GUAR.ID  = FIELD(GUARANTOR.ID,SM,I)
		
		CALL F.READ(FN.MBSC.GUARANTOR.PARAM,GUAR.ID,R.MBSC.GUARANTOR,F.MBSC.GUARANTOR.PARAM,ERR.FN.MBSC.GUARANTOR.PARAM)
	
		IF R.MBSC.GUARANTOR NE '' THEN
			GUAR.CUSTOMER     = R.MBSC.GUARANTOR<GUAR.PARAM.CUSTOMER>:@VM
			DATE.OF.GUARANTEE = R.MBSC.GUARANTOR<GUAR.PARAM.DATE.OF.GUARANTEE>:@VM
			PERC.OF.GUARANTEE = R.MBSC.GUARANTOR<GUAR.PARAM.PERC.OF.GUARANTEE>:@VM
			AMT.OF.GUARANTEE  = R.MBSC.GUARANTOR<GUAR.PARAM.AMT.OF.GUARANTEE>:@VM
			GUAR.COMPANY      = R.MBSC.GUARANTOR<GUAR.PARAM.COMPANY>:@VM
			LOAN.ID           = R.MBSC.GUARANTOR<GUAR.PARAM.LOAN.ID>:@VM
		END
		
		GUAR.CUSTOMER       = GUAR.CUSTOMER:ID.NEW
		DATE.OF.GUARANTEE   = DATE.OF.GUARANTEE:TODAY
		PERC.OF.GUARANTEE   = PERC.OF.GUARANTEE:FIELD(GUARANT.PERCE,SM,I)
		AMT.OF.GUARANTEE    = AMT.OF.GUARANTEE:FIELD(GUARANT.AMOUN,SM,I)
		GUAR.COMPANY        = GUAR.COMPANY:R.NEW(EB.CUS.CO.CODE)
		LOAN.ID             = LOAN.ID:''
		
		R.GUARANTOR<GUAR.PARAM.CUSTOMER>          = GUAR.CUSTOMER
		R.GUARANTOR<GUAR.PARAM.DATE.OF.GUARANTEE> = DATE.OF.GUARANTEE
		R.GUARANTOR<GUAR.PARAM.PERC.OF.GUARANTEE> = PERC.OF.GUARANTEE
		R.GUARANTOR<GUAR.PARAM.AMT.OF.GUARANTEE>  = AMT.OF.GUARANTEE
		R.GUARANTOR<GUAR.PARAM.COMPANY>           = GUAR.COMPANY
		R.GUARANTOR<GUAR.PARAM.LOAN.ID>           = LOAN.ID
		
		IF GUAR.ID NE '' THEN
			CALL F.WRITE(FN.MBSC.GUARANTOR.PARAM,GUAR.ID,R.GUARANTOR)
		END
		
	I++	
	UNTIL I GT GUARANTOR.LEN
	REPEAT
*------------------------------------------------------------------------------------------------------------------

	R.LEGAL     = ''
	L.CUST.ID   = ''
	R.DUPLICATE = ''
	
	CUST.CBE.ID = ''
	CALL GET.LOC.REF(APPLICATION,"CBE.NUMBER",CBE.POS)
	CUST.CBE.ID = 'CBE':R.NEW(EB.CUS.LOCAL.REF)<1,CBE.POS>
	
	CALL F.READ(FN.MBSC.CUST.DUPLICATE, CUST.CBE.ID, R.DUPLICATE, F.MBSC.CUST.DUPLICATE, ERR.DUPLICATE)

	IF R.DUPLICATE NE '' THEN
		AF    = CBE.POS
		ETEXT = 'CBE Number is already exist'
		CALL STORE.END.ERROR
	END ELSE
		L.CUST.ID                 = ID.NEW
		R.LEGAL<CUST.CUSTOMER.ID> = L.CUST.ID
		
		IF CUST.CBE.ID NE 'CBE' THEN
			CALL F.WRITE(FN.MBSC.CUST.DUPLICATE,CUST.CBE.ID,R.LEGAL)
		END
	END
	
	LEGAL.COUNT    = ''
		
	LEGAL.ID.NO    = ''
	LEGAL.ID.TYPE  = ''
	LEGAL.AUTH     = ''
	EXP.DATE       = ''
	ISSUE.DATE     = ''

	LEGAL.COUNT    = DCOUNT(R.NEW(EB.CUS.LEGAL.ID),@VM)	
	
	FOR X = 1 TO LEGAL.COUNT
		LEGAL.ID.NO    = R.NEW(EB.CUS.LEGAL.ID)<1,X>
		LEGAL.ID.TYPE  = R.NEW(EB.CUS.LEGAL.DOC.NAME)<1,X>
		LEGAL.AUTH     = R.NEW(EB.CUS.LEGAL.ISS.AUTH)<1,X>
		EXP.DATE       = R.NEW(EB.CUS.LEGAL.EXP.DATE)<1,X>
		ISSUE.DATE     = R.NEW(EB.CUS.LEGAL.ISS.DATE)<1,X>
		
		BEGIN CASE
			CASE LEGAL.ID.TYPE = 'COMM.REGISTER' 

				CUST.LEG.ID = ''
				CALL GET.LOC.REF(APPLICATION,"CUS.CR.CITY",CITY.POS)
				CUST.LEG.ID = 'CR':R.NEW(EB.CUS.LOCAL.REF)<1,CITY.POS>:LEGAL.ID.NO
				
				CALL F.READ(FN.MBSC.CUST.DUPLICATE, CUST.LEG.ID, R.DUPLICATE.LEG, F.MBSC.CUST.DUPLICATE, ERR.DUPLICATE)
				IF R.DUPLICATE.LEG NE '' THEN
					AF    = EB.CUS.LEGAL.ID
					ETEXT = 'COMM.REGISTER is already exist'
					CALL STORE.END.ERROR
				END ELSE 
					R.LEGAL<CUST.CUSTOMER.ID> = L.CUST.ID
					CALL F.WRITE(FN.MBSC.CUST.DUPLICATE,CUST.LEG.ID,R.LEGAL)
				END
				
			CASE LEGAL.ID.TYPE = 'BIRTH.CERTIFICATE'
			
				CUST.NAT.ID = ''
				CUST.NAT.ID = 'BIRTHCERT':LEGAL.ID.NO	
				
				CALL F.READ(FN.MBSC.CUST.DUPLICATE, CUST.NAT.ID, R.DUPLICATE.BR, F.MBSC.CUST.DUPLICATE, ERR.DUPLICATE)
				IF R.DUPLICATE.BR NE '' THEN
					AF = EB.CUS.LEGAL.ID
					ETEXT = 'BIRTH.CERTIFICATE is already exist'
					CALL STORE.END.ERROR
				END ELSE
					R.LEGAL<CUST.CUSTOMER.ID> = L.CUST.ID
					CALL F.WRITE(FN.MBSC.CUST.DUPLICATE,CUST.NAT.ID,R.LEGAL)
				END
		END CASE
	NEXT X

*------------------------------------------------------------------------------------------------------------------
	
	CUSTOMER.STATUS  = R.NEW(EB.CUS.CUSTOMER.STATUS)
	POSTING.RESTRICT = R.NEW(EB.CUS.POSTING.RESTRICT)
	
	IF CUSTOMER.STATUS EQ '70' THEN 
		DATE.OF.BIRTH    = R.NEW(EB.CUS.DATE.OF.BIRTH)
		
		BIRTH.YEAR      = DATE.OF.BIRTH[1,4]
		BIRTH.MONTH.DAY = DATE.OF.BIRTH[5,4]
		NUM.YEAR        = '21'
		MINOR.YEAR      = BIRTH.YEAR + NUM.YEAR
		TARGET.DATE     = MINOR.YEAR:BIRTH.MONTH.DAY
		
		T.DATE   = TODAY
		MINOR.ID = ID.NEW
		
		IF TARGET.DATE GT T.DATE THEN
			R.MBSC.MINOR.DATA<CUS.MIN.CUS.BIRTH.DATE> = DATE.OF.BIRTH
			R.MBSC.MINOR.DATA<CUS.MIN.TARGET.DATE>    = TARGET.DATE
			
			CALL F.WRITE (FN.MBSC.MINOR.DATA, MINOR.ID, R.MBSC.MINOR.DATA)
		END
	END

*------------------------------------------------------------------------------------------------------------------
RETURN
END
*------------------------------------------------------------------------------------------------------------------



